<?php

function islandora_fjm_islandora_solr_primary_display() {
  return array(
    // 'machine-name' = array(
    //   'name' => 'Human Readable Name',
    //   'module' => 'module_name',
    //   'file' => 'FileName.inc',
    //   'class' => 'ClassName',
    //   'function' => 'function_name',
    //   'description' => 'A description of the display profile',
    // );
    'islandora_fjm' => array(
      'name' => t('FJM display'),
      'module' => 'islandora_fjm',
      'file' => 'includes/SolrResults.inc',
      'class' => "SolrResults",
      'function' => "displayResults",
      'description' => t("Change display based on type."),
    ),
  );
}

function islandora_fjm_menu()
{
    $items = array();
    
    //Hacking a hack...  Need to get the XSLTs used to index in GSearch.
    //  The XSLTs reference each other, and Xalan seems to have trouble
    //  With relative URLs.
    //TODO:  Might want to look at locking it down?  The callback function restricts to
    //  only .xsd and .xsl, so I don't see a major issue.
    $items['fedora/xml'] = array(
        'title' => t('Get stored XML'),
        'page callback' => 'islandora_fjm_display_schema',
        'type' => MENU_CALLBACK,
        'access callback' => TRUE
    );
}

function islandora_fjm_display_schema() {
  $filepath = drupal_get_path('module', 'islandora_fjm');

  //Build the path (relative to the module path) -- kinda bad, but anyway.
  foreach(func_get_args() as $i)
  {
      $filepath .= '/' . $i;
  }
  
  $exts = array(
      '.xslt' => true
  );
  $ext = strtolower(strrchr($filepath, "."));
  if (isset($exts[$ext]) && $exts[$ext] && file_exists($filepath)) {
    drupal_goto($filepath);
  }
  else {
    drupal_goto();
  }
  return;
}

function islandora_fjm_theme() {
	return array (
		'islandora_fjm_solr_result' => array(
			'arguments' => array('item' => null),
			'template' => 'templates/solr_result'
		),
		'islandora_fjm_solr_table' => array(
			'arguments' => array('items' => null),
			'template' => 'templates/solr_table'
		)
	);
}

function islandora_fjm_preprocess_islandora_fjm_solr_result(&$vars)
{
	$result = $vars['item'];
	//dsm($vars);
	$toReturn = array();
		
	switch($result->atm_type_s)
	{
	case "Composer":
		$toReturn['icon'] = "fedora/repository/" . $result->atm_composer_icon_s . "/TN";
		$toReturn['icon_image'] = theme('image', $toReturn['icon'], '', '', '', false);
		$toReturn['name'] = $result->atm_composer_name_s;
		$toReturn['name_link'] = l($result->atm_composer_name_s, "fedora/repository/$result->PID");
	break;
	case "Concert":
		$toReturn['title'] = $result->atm_concert_title_s;
		$toReturn['cycle'] = $result->atm_concert_cycle_s;
		$toReturn['date'] = $result->atm_concert_date_dt;
		$toReturn['icon'] = "fedora/repository/$result->atm_concert_iconpid_s";
	break;
	case "Performance":
		$toReturn['title'] = $result->atm_performance_piece_title_s;
		$toReturn['composer'] = $result->atm_performance_composer_name_s;
		//FIXME (minor):  If the perfomance is somehow part of multiple entities/concerts,
		//	this could break.
		$toReturn['concertPid'] = $result->rels_isMemberOf_ms;
		$toReturn['concert'] = $result->atm_performance_concert_name_s;
		$toReturn['cycle'] = $result->atm_performance_concert_cycle_s;
		$toReturn['audio'] = array();
		if($result->atm_performance_mp3_b)
		{
			$toReturn['audio'][] = $result->PID;
		}
		else
		{
			foreach($result->atm_performance_movement_ms as $audio)
			{
				$toReturn['audio'][] = $audio;
			}
		}
		$toReturn['score'] = $result->rels_basedOn_ms;
		$toReturn['score_link'] = l('Score', "islandora/solr/search/PID:\"". $toReturn['score'] . "\"");
	break;
	case "Lecture":
		$toReturn['title'] = $result->atm_lecture_title_s;
		$toReturn['concert'] = $result->atm_lecture_concert_title_s;
		$toReturn['cycle'] = $result->atm_lecture_concert_cycle_s;
		$toReturn['audio'] = array($result->PID);
	break;
	case "Performer":
		$toReturn['name'] = $result->atm_performer_name_s;
		$toReturn['instrument'] = $result->atm_performer_instrument_s;
		$toReturn['group'] = $result->atm_performer_group_s;
		$toReturn['concert'] = $result->atm_performer_concert_title_s;
		$toReturn['cycle'] = $result->atm_performer_concert_cycle_s;
		$toReturn['piece'] = $result->atm_performer_piece_title_s;
	break;
	case "Program":
		$toReturn['concert'] = $result->atm_program_concert_title_s;
		//FIXME (minor):  concert cycle does not need to be multivalued...
		$toReturn['cycle'] = $result->atm_program_concert_cycle_ms;
		$toReturn['titn'] = $result->atm_program_titn_s;
		$toReturn['titn_link'] = l(t('Search'), 'http://www.march.es/abnopac/abnetcl.exe?ACC=DOSEARCH&xsqf01=' . $toReturn['titn']);
		$toReturn['author'] = $result->atm_program_author_s;
		$toReturn['PDF_link'] = l(t('PDF'), "fedora/repository/$result->PID");
	break;
	case "Score":
			$toReturn['composer'] = $result->atm_score_composer_s;
			$toReturn['title'] = $result->atm_score_title_s;
			$toReturn['titn'] = $result->atm_score_titn_s;
			$toReturn['titn_link'] = ($toReturn['titn'] > 0)?l(t('Search'), 'http://www.march.es/abnopac/abnetcl.exe?ACC=DOSEARCH&xsqf01=' . $toReturn['titn']):t('no titn!');
			$toReturn['pdf'] = $result->atm_score_pdf_b;
			$toReturn['PDF_link'] = ($toReturn['pdf'])? l(t('PDF'), "fedora/repository/$result->PID") : t('no pdf');
	break;
	default:
			$toReturn[] = "Unknown type!";
	}

	$toReturn['type'] = $result->atm_type_s;
	$toReturn['PID'] = $result->PID;
	
	$vars['item'] = $toReturn;
}
